@*******************************************************************************************************
//  GenerateProject.cshtml - Gbtc
//
//  Copyright © 2016, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  01/15/2016 - J. Ritchie Carroll
//       Generated original version of source code.
//
//*****************************************************************************************************@
@using GSF.Web
@using openECAClient
@using openECAClient.Model
@using RazorEngine.Templating
@inherits TemplateBase<AppModel>
@{
    Layout = "Layout.cshtml";
    ViewBag.Title = "Settings";
}
@section StyleSheets {
    @Raw(ViewBag.PageStyleSheets.ToString())
}
<div class="col-md-6 col-md-offset-3">
    <div class="row" style="margin-top: 20px">
        <div class="col-md-12">
            <label for="connection">openECA Server Connection String:</label>
            <input class="form-control" type="text" id="connection">
        </div>
    </div>

    <div class="row" style="margin-top: 10px">
        <div class="col-md-12">
            <label for="directory">Default Project Path:</label>
            <div class="input-group">
                <input class="form-control" type="text" id="directory" value="@Raw(Model.Global.DefaultProjectPath)" />
                <span class="input-group-btn">
                    <button type="button" class="btn btn-default" data-toggle="modal" data-target="#directoryBrowser" hub-dependent><span class="glyphicon glyphicon-option-horizontal"></span></button>
                </span>
            </div>
        </div>
    </div>

    <br />
    <br />

    <div class="row">
        <div class="col-md-12">
            <input class="btn btn-primary" type="button" id="update" onclick="updateSettings()" value="Update Settings" hub-dependent />
        </div>
    </div>
</div>
@Include("DirectoryBrowser.cshtml")
@section Scripts {
    <script src="Scripts/knockout-3.4.0.js"></script>
    @Raw(ViewBag.PageControlScripts.ToString())
    <script>
        $("#selectFolder").click(function () {
            $("#directory").val(directoryViewModel.currentFolder());

            //if (relinuxpath.test($('#directory').val()) || rewinpath.test($('#directory').val())) {
            //    $('#directory').css('border-color', '');
            //    if ((reipaddresswport.test($('#connection').val()) || rehostname.test($('#connection').val())) && (relinuxpath.test($('#directory').val()) || rewinpath.test($('#directory').val())))
            //        $('#update').removeAttr('disabled');
            //}
            //else {
            //    $('#directory').css('border-color', 'red');
            //    $('#update').attr('disabled', 'disabled');
            //}

        });

        var re = /^[A-Za-z_][\w]*$/;
        var reipaddresswport = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]):[0-9]+$/;
        var rehostname = /^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\-]*[A-Za-z0-9]):[0-9]+$/;
        var relinuxpath = /^(\/[^/ ]*)+\/?$/;
        var rewinpath = /^(?:[\w]\:|\\)(\\[\w\-\s\.]+)+$/;
        var connection = "@Raw(Model.Global.SubscriptionConnectionString.JavaScriptEncode())";

        $(function () {
            $('#connection').val(connection);

            //$('#connection').on('keyup', function (e) {
            //    if (reipaddresswport.test($('#connection').val()) || rehostname.test($('#connection').val())) {
            //        $('#connection').css('border-color', '');
            //        if ((reipaddresswport.test($('#connection').val()) || rehostname.test($('#connection').val())) && (relinuxpath.test($('#directory').val()) || rewinpath.test($('#directory').val())))
            //            $('#update').removeAttr('disabled');
            //    }
            //    else {
            //        $('#connection').css('border-color', 'red');
            //        $('#update').attr('disabled', 'disabled');
            //    }
            //});

            //$('#directory').on('keyup', function (e) {
            //    if (relinuxpath.test($('#directory').val()) || rewinpath.test($('#directory').val())) {
            //        $('#directory').css('border-color', '');
            //        if ((reipaddresswport.test($('#connection').val()) || rehostname.test($('#connection').val())) && (relinuxpath.test($('#directory').val()) || rewinpath.test($('#directory').val())))
            //            $('#update').removeAttr('disabled');
            //    }
            //    else {
            //        $('#directory').css('border-color', 'red');
            //        $('#update').attr('disabled', 'disabled');
            //    }
            //});

            //$('#selectFolder').on('click', function(){
            //    $('#directory').val()
            //});
        });

        function updateSettings() {
            if (!hubIsConnected)
                return;

            dataHub.updateApplicationSettings({ 'SubscriptionConnectionString': $('#connection').val(), 'DefaultProjectPath': $('#directory').val() }).done(function (d) { location.reload(); });
        }
    </script>
}
