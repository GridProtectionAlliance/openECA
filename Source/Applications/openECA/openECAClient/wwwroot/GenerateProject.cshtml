@*******************************************************************************************************
    //  GenerateProject.cshtml - Gbtc
    //
    //  Copyright © 2016, Grid Protection Alliance.  All Rights Reserved.
    //
    //  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
    //  the NOTICE file distributed with this work for additional information regarding copyright ownership.
    //  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
    //  file except in compliance with the License. You may obtain a copy of the License at:
    //
    //      http://opensource.org/licenses/MIT
    //
    //  Unless agreed to in writing, the subject software distributed under the License is distributed on an
    //  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
    //  License for the specific language governing permissions and limitations.
    //
    //  Code Modification History:
    //  ----------------------------------------------------------------------------------------------------
    //  01/15/2016 - J. Ritchie Carroll
    //       Generated original version of source code.
    //
    //*****************************************************************************************************@
@*@using System
@using System.Collections.Generic
@using System.Data
@using GSF
@using GSF.Data
@using GSF.Identity
@using GSF.IO
@using GSF.Reflection
@using GSF.TimeSeries
@using GSF.TimeSeries.Transport
@using Newtonsoft.Json*@
@using openECAClient
@using openECAClient.Model
@using RazorEngine.Templating
@inherits TemplateBase<AppModel>
@{
    Layout = "Layout.cshtml";
    ViewBag.Title = "Generate Project";

}

<div class="row">
    <div class="col-md-3">
        <label for="identifier">Project Name:</label>
        <input class="form-control" type="text" id="identifier">
    </div>
</div>

<div class="row">
    <div class="col-md-3">
        <label for="directory">File Directory:</label>
        <input class="form-control" type="text" id="directory" />
    </div>
</div>


<div class="row">
    <div class="col-md-3">
        <label for="types">Input Mapping:</label>
        <select class="form-control" id="inputs"></select>
    </div>
</div>

<div class="row">
    <div class="col-md-3">
        <label for="types">Output Mapping:</label>
        <select class="form-control" id="outputs"></select>
    </div>
</div>

<div class="row">
    <div class="col-md-3">
        <label for="lang">Target Language:</label>
        <select class="form-control" id="targetLanguage">
            <option value="C#">C# (.NET)</option>
            <option value="F#" disabled="disabled">F# (.NET)</option>
            <option value="VB" disabled="disabled">VB (.NET)</option>
            <option value="Java" disabled="disabled">Java</option>
            <option value="C++" disabled="disabled">C++</option>
            <option value="Python" disabled="disabled">Python</option>
            <option value="MATLAB" disabled="disabled">MATLAB</option>
        </select>
    </div>
</div>

<br/>
<br/>

<div class="row">
    <div class="col-md-12">
        <input class="btn btn-primary" type="button" id="generate" value="Generate Project"/>
    </div>
</div>



@section Scripts {
    <script>
        var re = /^[A-Za-z_][\w]*$/;
        var relinuxpath = /^(\/[^/ ]*)+\/?$/;
        var rewinpath = /^(?:[\w]\:|\\)(\\[\w\-\s\.]+)+$/;


        $(function () {
            $('#generate').attr('disabled', 'disabled');

            $('#identifier').on('keyup', function (e) {
                if (re.test($('#identifier').val())) {
                    $('#identifier').css('border-color', '');
                    if (re.test($('#identifier').val()) && (relinuxpath.test($('#directory').val()) || rewinpath.test($('#directory').val())))
                        $('#generate').removeAttr('disabled');
                }
                else {
                    $('#identifier').css('border-color', 'red');
                    $('#generate').attr('disabled', 'disabled');
                }
            });
            
            $('#directory').on('keyup', function (e) {
                if (relinuxpath.test($('#directory').val()) || rewinpath.test($('#directory').val())) {
                    $('#directory').css('border-color', '');
                    if (re.test($('#identifier').val()) && (relinuxpath.test($('#directory').val()) || rewinpath.test($('#directory').val())))
                        $('#generate').removeAttr('disabled');
                }
                else {
                    $('#directory').css('border-color', 'red');
                    $('#generate').attr('disabled', 'disabled');
                }
            });

            $(window).on("hubConnected", function (event) {
                GetData();
            });
        
            $('#generate').one('click', function (e) {
                var input, output;
                dataHub.getDefinedMappings().done(function (data) {
                    $.each(data, function (i, d) {
                        if (d.Identifier == $('#inputs').val())
                            input = d;
                        else if (d.Identifier == $('#outputs').val())
                            output = d;
                    });
                    //console.log(input);
                    //console.log(output);
                    
                    dataHub.createProject($('#identifier').val(), $('#directory').val(), input, output, $('#targetLanguage').val()).done(function () {
                        alert("Project Created!");
                        location.reload();
                    });
                });

            });

        });
        
        function GetData() {
            dataHub.getDefinedMappings().done(function (data) {
                //console.log(data);
                $.each(data, function (i, d) {
                    $('#inputs').append($('<option />').val(d.Identifier).text(d.Identifier));
                    $('#outputs').append($('<option />').val(d.Identifier).text(d.Identifier));

                });

            });
        }
    
    </script>
}
