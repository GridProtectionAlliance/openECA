% COMPILER GENERATED CODE
% THIS WILL BE OVERWRITTEN AT EACH GENERATION
% EDIT AT YOUR OWN RISK

classdef Mapper < handle % For {ProjectName}
    properties (Access = private)
        m_helper = [];
    end
    methods
        function this = Mapper(helper)
            this.m_helper = helper;
            helper.InputMapping = '{InputMapping}';
        end
        function output = Map(this, measurements)
            this.m_helper.SignalLookup.UpdateMeasurementLookup(measurements);
            inputMapping = this.m_helper.MappingCompiler.GetTypeMapping(this.m_helper.InputMapping);

            inputData = this.Create{InputCategoryIdentifier}{InputDataTypeIdentifier}(inputMapping);
            this.m_helper.KeyIndex = 0;
            inputMeta = this.Create{InputCategoryIdentifier}{InputMetaTypeIdentifier}(inputMapping);

            outputData = Algorithm.Execute(inputData, inputMeta); % <- {OutputDataTypeName}

            % TODO: Later versions will publish output to the openECA server
        end
    end
    methods (Access = private)
         {MappingFunctions}
    end
end