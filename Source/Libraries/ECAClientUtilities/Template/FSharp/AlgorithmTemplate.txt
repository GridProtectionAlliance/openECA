namespace {ProjectName}

open System
open ECAClientFramework
{Usings}

module Algorithm =
    let mutable CreateNewOutput = fun () ->
        (new {OutputDataType}(), new {OutputMetaType}())
    let UpdateSystemSettings() =
        SystemSettings.InputMapping <- "{InputMapping}"
        SystemSettings.OutputMapping <- "{OutputMapping}"
        SystemSettings.ConnectionString <- @{ConnectionString}
        SystemSettings.FramesPerSecond <- 30
        SystemSettings.LagTime <- 3.0
        SystemSettings.LeadTime <- 1.0
    let Execute(inputData : {InputDataType}, inputMeta : {InputMetaType}) : {OutputDataType} * {OutputMetaType} =
        // TODO: Implement your algorithm here...
        let (outputData, outputMeta) = CreateNewOutput()

        try
            // You can also write messages to the main window:
            MainWindow.WriteMessage("Hello, World!")
        with
        | Failure msg ->
            // Display error messages to the main window
            MainWindow.WriteError(new InvalidOperationException("Algorithm exception: " + msg))
        | ex ->
            // Display exceptions to the main window
            MainWindow.WriteError(new InvalidOperationException("Algorithm exception: " + ex.Message, ex))
            
        (outputData, outputMeta)
